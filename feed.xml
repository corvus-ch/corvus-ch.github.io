<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://corvus-ch.name/feed.xml" rel="self" type="application/atom+xml" /><link href="https://corvus-ch.name/" rel="alternate" type="text/html" /><updated>2022-08-16T11:44:18-05:00</updated><id>https://corvus-ch.name/feed.xml</id><title type="html">Christian Häusler</title><subtitle>About software architecture and security in the cloud</subtitle><author><name>Christian Häusler</name><email>haeusler.christian@mac.com</email></author><entry><title type="html">Bringing a web application to the cloud</title><link href="https://corvus-ch.name/articles/cloud-ready-applications/" rel="alternate" type="text/html" title="Bringing a web application to the cloud" /><published>2014-09-14T00:00:00-05:00</published><updated>2014-09-14T00:00:00-05:00</updated><id>https://corvus-ch.name/articles/cloud-ready-applications</id><content type="html" xml:base="https://corvus-ch.name/articles/cloud-ready-applications/"><![CDATA[<div class="paragraph">
<p>Being a web developer for quite some time now, I recently had the change to get involved in a project where we are building a platform as a service (PaaS).
Needless to say that I took the changes and tried to deploy a few apps of my own.
I found that bringing an app to the cloud needs some preparation and there are two things I consider being crucial: a cloud ready app must be stateless and must be able to use environment variables for configuration.</p>
</div>
<div class="paragraph">
<p>A PaaS runs your app in container or some other form of isolation.
Fact is that the storage is ephemeral and everything you have written to the file system will be lost once the app gets restarted and if you are using horizontal scaling, the files of the instances are not shared with each other.
Ok, no local filesystem but where do my user uploaded files go? Well, we should use a storage service like OpenStacks Swift storage or Amazons S3.</p>
</div>
<div class="paragraph">
<p>The two PaaS systems I know, which are <a href="https://www.heroku.com/">Heroku</a> and <a href="http://cloudfoundry.org/index.html">Cloud Foundry</a>, allow you to bind services like mysql databases, Memcached or the above mentioned storage services to your app.
They are doing this by injecting the access credentials of the services into your apps execution environment as environment variables.
In order to use those services, your app must be capable of picking them up.</p>
</div>
<div class="paragraph">
<p>So bringing a web application adds some restrictions and requires you to handle some stuff differently.
For the better or worse? I can not tell yet.</p>
</div>]]></content><author><name>Christian Häusler</name><email>haeusler.christian@mac.com</email></author><summary type="html"><![CDATA[Bringing a web application to the cloud adds some restricitons and requires to handle some stuff differently.]]></summary></entry></feed>